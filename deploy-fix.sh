#!/bin/bash

# Script de d√©ploiement des corrections FlotteQ
echo "üöÄ D√©ploiement des corrections FlotteQ - $(date)"
echo "================================================"

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# V√©rifications pr√©alables
echo -e "${YELLOW}=== V√©rifications pr√©alables ===${NC}"

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "backend/config/cors.php" ]; then
    echo -e "${RED}‚ùå Erreur: Script doit √™tre ex√©cut√© depuis la racine du projet${NC}"
    exit 1
fi

# V√©rifier que git est propre
if [ -n "$(git status --porcelain)" ]; then
    echo -e "${RED}‚ùå Il y a des changements non commit√©es. Commit d'abord.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ V√©rifications OK${NC}"

# √âtape 1: D√©ploiement backend
echo -e "\n${YELLOW}=== D√©ploiement Backend (Railway) ===${NC}"
cd backend
echo "üì¶ Pushing backend to Railway..."

# V√©rifier si Railway CLI est install√©
if ! command -v railway &> /dev/null; then
    echo -e "${RED}‚ùå Railway CLI non install√©. Installation requise:${NC}"
    echo "npm install -g @railway/cli"
    echo "railway login"
    exit 1
fi

# D√©ployer sur Railway
railway up --detach
echo -e "${GREEN}‚úÖ Backend d√©ploy√© sur Railway${NC}"

# Retour √† la racine
cd ..

# √âtape 2: D√©ploiement frontends
echo -e "\n${YELLOW}=== D√©ploiement Frontends (Vercel) ===${NC}"

# V√©rifier si Vercel CLI est install√©
if ! command -v vercel &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è Vercel CLI non install√©. D√©ploiement manuel requis:${NC}"
    echo "1. Frontend Tenant: Push sur git, Vercel auto-deploy"
    echo "2. Frontend Internal: Push sur git, Vercel auto-deploy"
else
    echo "üì¶ D√©ploiement des frontends..."
    
    # D√©ployer frontend tenant
    cd frontend/tenant
    vercel --prod --yes
    echo -e "${GREEN}‚úÖ Frontend Tenant d√©ploy√©${NC}"
    
    # D√©ployer frontend internal
    cd ../internal
    vercel --prod --yes
    echo -e "${GREEN}‚úÖ Frontend Internal d√©ploy√©${NC}"
    
    cd ../..
fi

# √âtape 3: Instructions base de donn√©es
echo -e "\n${YELLOW}=== Configuration Base de Donn√©es ===${NC}"
echo -e "${BLUE}üìù Action manuelle requise:${NC}"
echo "1. Se connecter √† la base de donn√©es Railway:"
echo "   railway connect --database"
echo ""
echo "2. Ex√©cuter le script SQL de correction:"
echo "   \\i backend/fix-internal-users.sql"
echo ""
echo "3. V√©rifier les utilisateurs cr√©√©s:"
echo "   SELECT * FROM users WHERE is_internal = true;"

# √âtape 4: Tests
echo -e "\n${YELLOW}=== Lancement des tests ===${NC}"
./test-deployment.sh

# R√©sum√©
echo -e "\n${GREEN}=== D√âPLOIEMENT TERMIN√â ===${NC}"
echo "‚úÖ Backend mis √† jour sur Railway"
echo "‚úÖ Frontends red√©ploy√©s (ou instructions donn√©es)"
echo "‚úÖ Script SQL cr√©√© pour corriger les utilisateurs"
echo "‚úÖ Tests de connectivit√© lanc√©s"
echo ""
echo -e "${BLUE}üìã Prochaines √©tapes:${NC}"
echo "1. Ex√©cuter le script SQL sur la base Railway"
echo "2. Tester l'authentification sur les frontends"
echo "3. V√©rifier que tout fonctionne correctement"
echo ""
echo -e "${GREEN}üéâ FlotteQ est maintenant configur√© correctement!${NC}"